垃圾回收算法 标记清除 复制 标记整理

实际垃圾回收时 多个算法一块用 -->从而引出分代收集的概念
联想redis里面的持久化rdb和aof两者一块使用

虚拟机有哪些垃圾回收器（java语言的内层管理 交由虚拟机自行管理）
如何保证高效 尽可能保证 充分调动每一个步骤的积极性 （如异步操作  尽可能的提高并发度）

对于这里面涉及到的 当虚拟机进行垃圾收集的时候
虚拟机的垃圾回收线程 与用户运行在jvm上的虚拟机的程序线程 在垃圾回收时（对于具体的垃圾回收策略 涉及的每一个步骤
对于 有些阶段时可以 保证虚拟机垃圾回收线程和用户线程一块执行 如并发标记清除算法  cms垃圾收集器 对于初始标记和重新标记需要对用户的线程或进程 进行中断 ）


谁来确定哪些垃圾要处理
谁来对垃圾进行处理
首先需要根据垃圾的判断依据筛选出需要清楚的内存无效引用垃圾
分析需要处理的内存区域
对于 不同区域 是否要采用不同的回收策略
为了保证 最大的回收效率 可以选用什么样的回收策略

垃圾年龄待的升级 年轻代到老年代
java 里面的锁的升级 无锁 乐观锁cas 轻量级锁 重量级锁

stop the world(垃圾回收时的某些阶段 会停止用户程序的正常运行 因为垃圾回收时会存在内存块的整理 导致原有的对象指针发生改变 所以需要用户跑在虚拟机上的应用重新找这个对象 )
