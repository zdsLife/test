

对于链表相关的编码

查看链表指向的赋值代码
如

tail.next = head

把当前链表的为节点的指向的下一个指针指向 头节点

经典小技巧  涉及三个指针  指向前面的last(pre)  指向后面的next
初始 pre=next=null
因为初始第一个节点的左边节点为null
拿到链表的头指针head    默认头节点指向链表的第一个节点
基础基础基础 链表反转




单链表反转核心代码
第一步保存指向下一个节点的指向
next = head.next
第二步改变当前节点的指向下一个节点的指针 指向前面的节点
head.next = pre(指向下一个节点的指针向前指)
分别向后移动指向前面的指针 和指向后面的指针
pre = head (这里pre 由初始指向第一个节点左边的空节点null变为指向第一个节点 即初始头节点指向的第一个节点)
头节点后移开始为反转第二个节点做准备
head = next
==================
next = head.next (记录下一个节点的指向)
head.next = pre  (指向下一个节点的指针向前指)
pre = head       (前指针后移)
head = next      (后指针后移)




双链表反转核心代码
next = head.next  (记录下一个节点的指向)
head.next = pre   (指向下一个节点的指针向前指)
head.last = next  (指向前一个节点的指针向后指)
pre = head        (前指针后移)
head =next        (后指针后移)


先有尝试的思路  再有逐渐成熟的产品（代码）