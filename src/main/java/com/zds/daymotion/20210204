
============================================================
2021 的小年 我又离职了
============================================================

多加反思吧


2021/02/04-10:26:32 [Test worker] DEBUG com.data.web.backend.mapper.SysLogMapper.countAssignTimeUvTest [143]- ==>  Preparing: SELECT count(DISTINCT action_user) as uv FROM sys_log where event = 'LoginResult' and action_user not in ('houyaqian@kungeek.com','zhudongsheng@kungeek.com','liuxiao@kungeek.com','wangmingyu@kungeek.com','yangjin@kungeek.com','guojunya@kungeek.com','shencheng@kungeek.com','liuhoulei@kungeek.com','wangweizhong@kungeek.com','zhangyubo@kungeek.com','dongwenjian@kungeek.com','wujunnan@kungeek.com','yinkai@kungeek.com','qiyanan@kungeek.com') and log_time >=? and log_time<=?
2021/02/04-10:26:32 [Test worker] DEBUG com.data.web.backend.mapper.SysLogMapper.countAssignTimeUvTest [143]- ==> Parameters: 2021-01-02 00:00:00.0(Timestamp), 2021-02-05 23:59:59.0(Timestamp)
2021/02/04-10:26:32 [Test worker] DEBUG com.data.web.backend.mapper.SysLogMapper.countAssignTimeUvTest [143]- <==      Total: 1

@Test
    public void testNoRepeatDataGroup() throws Exception {
        Date start = DateUtil.str2DateToDay("2021-01-02" + TagFilterServiceImpl.DAY_BEGIN, DateUtil.DATE_TO_DAY);
        Date end = DateUtil.str2DateToDay("2021-02-05" + TagFilterServiceImpl.DAY_END, DateUtil.DATE_TO_DAY);
        ArrayList<String> arrayList = new ArrayList<>();
        arrayList.add("houyaqian@kungeek.com");
        arrayList.add("zhudongsheng@kungeek.com");
        arrayList.add("liuxiao@kungeek.com");
        arrayList.add("wangmingyu@kungeek.com");
        arrayList.add("yangjin@kungeek.com");
        arrayList.add("guojunya@kungeek.com");
        arrayList.add("shencheng@kungeek.com");
        arrayList.add("liuhoulei@kungeek.com");
        arrayList.add("wangweizhong@kungeek.com");
        arrayList.add("zhangyubo@kungeek.com");
        arrayList.add("dongwenjian@kungeek.com");
        arrayList.add("wujunnan@kungeek.com");
        arrayList.add("yinkai@kungeek.com");
        arrayList.add("qiyanan@kungeek.com");
        StringBuffer concatSql = new StringBuffer("");
        String s = new DynamicSqlBuilder().ContactSql(concatSql, arrayList);
        System.out.println("============"+sysLogMapper.countAssignTimeUvTest(start, end, s));
    }


 @Select("SELECT count(DISTINCT action_user) as uv\n" +
            "FROM sys_log\n" +
            "where event = 'LoginResult'\n" +
            "and action_user not in ${dataGroup}\n" +
            "and log_time >=#{start} and log_time<=#{end}")
    Integer countAssignTimeUvTest(Date start, Date end,String dataGroup);


==============

对sql 语句的深刻理解 @Select () "" 双引号 说明是一串字符串
x













1.需求的反复确认
2.库表的详细设计
3.新的需求 所需技术的快速学习
4.团队协作 的好印象
5.对于未来职业发展的考虑
6.关于mysql 复杂语句的书写
7.用户分析或者 推荐系统
8.一个问题的 解决 领导想要的是选择题 就是 你提出多个解决方案 让他选
9.解决 复杂需求的能力
10.与团队人员协作的能力
11.数据库语句修改 及时增量更新
12.wiki jira bitbucket 三者的熟练使用 及git 分支合并的深刻理解
13.代码的 清晰易懂 便于后来人维护 是mapper层的代码 尽量不要往service 里面写（标签部门关系的维护）
14.执行力
15.反复修改代码 确保代码简洁高效
16.es的学习
17.大数据 data-work max_computer
18.一人开发一个后端系统 及最好可以开发前端的全栈能力














































